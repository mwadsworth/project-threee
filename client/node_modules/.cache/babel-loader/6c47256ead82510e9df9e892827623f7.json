{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactModal = require('react-modal');\n\nvar _reactModal2 = _interopRequireDefault(_reactModal);\n\nvar _Const = require('../Const');\n\nvar _Const2 = _interopRequireDefault(_Const);\n\nvar _Notification = require('../Notification.js');\n\nvar _InsertModal = require('./InsertModal');\n\nvar _InsertModal2 = _interopRequireDefault(_InsertModal);\n\nvar _InsertButton = require('./InsertButton');\n\nvar _InsertButton2 = _interopRequireDefault(_InsertButton);\n\nvar _DeleteButton = require('./DeleteButton');\n\nvar _DeleteButton2 = _interopRequireDefault(_DeleteButton);\n\nvar _ExportCSVButton = require('./ExportCSVButton');\n\nvar _ExportCSVButton2 = _interopRequireDefault(_ExportCSVButton);\n\nvar _ShowSelectedOnlyButton = require('./ShowSelectedOnlyButton');\n\nvar _ShowSelectedOnlyButton2 = _interopRequireDefault(_ShowSelectedOnlyButton);\n\nvar _SearchField = require('./SearchField');\n\nvar _SearchField2 = _interopRequireDefault(_SearchField);\n\nvar _ClearSearchButton = require('./ClearSearchButton');\n\nvar _ClearSearchButton2 = _interopRequireDefault(_ClearSearchButton);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint no-console: 0 */\n// import classSet from 'classnames';\n// import editor from '../Editor';\n\n\nvar ToolBar = function (_Component) {\n  _inherits(ToolBar, _Component);\n\n  function ToolBar(props) {\n    _classCallCheck(this, ToolBar);\n\n    var _this = _possibleConstructorReturn(this, (ToolBar.__proto__ || Object.getPrototypeOf(ToolBar)).call(this, props));\n\n    _this.displayCommonMessage = function () {\n      return _this.__displayCommonMessage__REACT_HOT_LOADER__.apply(_this, arguments);\n    };\n\n    _this.handleSaveBtnClick = function () {\n      return _this.__handleSaveBtnClick__REACT_HOT_LOADER__.apply(_this, arguments);\n    };\n\n    _this.afterHandleSaveBtnClick = function () {\n      return _this.__afterHandleSaveBtnClick__REACT_HOT_LOADER__.apply(_this, arguments);\n    };\n\n    _this.handleModalClose = function () {\n      return _this.__handleModalClose__REACT_HOT_LOADER__.apply(_this, arguments);\n    };\n\n    _this.handleModalOpen = function () {\n      return _this.__handleModalOpen__REACT_HOT_LOADER__.apply(_this, arguments);\n    };\n\n    _this.handleShowOnlyToggle = function () {\n      return _this.__handleShowOnlyToggle__REACT_HOT_LOADER__.apply(_this, arguments);\n    };\n\n    _this.handleDropRowBtnClick = function () {\n      return _this.__handleDropRowBtnClick__REACT_HOT_LOADER__.apply(_this, arguments);\n    };\n\n    _this.handleDebounce = function () {\n      return _this.__handleDebounce__REACT_HOT_LOADER__.apply(_this, arguments);\n    };\n\n    _this.handleKeyUp = function () {\n      return _this.__handleKeyUp__REACT_HOT_LOADER__.apply(_this, arguments);\n    };\n\n    _this.handleExportCSV = function () {\n      return _this.__handleExportCSV__REACT_HOT_LOADER__.apply(_this, arguments);\n    };\n\n    _this.handleClearBtnClick = function () {\n      return _this.__handleClearBtnClick__REACT_HOT_LOADER__.apply(_this, arguments);\n    };\n\n    _this.timeouteClear = 0;\n    _this.modalClassName;\n    _this.state = {\n      isInsertModalOpen: false,\n      validateState: null,\n      shakeEditor: false,\n      showSelected: false\n    };\n    return _this;\n  }\n\n  _createClass(ToolBar, [{\n    key: '__handleClearBtnClick__REACT_HOT_LOADER__',\n    value: function __handleClearBtnClick__REACT_HOT_LOADER__() {\n      return this.__handleClearBtnClick__REACT_HOT_LOADER__.apply(this, arguments);\n    }\n  }, {\n    key: '__handleExportCSV__REACT_HOT_LOADER__',\n    value: function __handleExportCSV__REACT_HOT_LOADER__() {\n      return this.__handleExportCSV__REACT_HOT_LOADER__.apply(this, arguments);\n    }\n  }, {\n    key: '__handleKeyUp__REACT_HOT_LOADER__',\n    value: function __handleKeyUp__REACT_HOT_LOADER__() {\n      return this.__handleKeyUp__REACT_HOT_LOADER__.apply(this, arguments);\n    }\n  }, {\n    key: '__handleDebounce__REACT_HOT_LOADER__',\n    value: function __handleDebounce__REACT_HOT_LOADER__(func, wait, immediate) {\n      var _this2 = this,\n          _arguments = arguments;\n\n      var timeout = void 0;\n      return function () {\n        var later = function later() {\n          timeout = null;\n\n          if (!immediate) {\n            func.apply(_this2, _arguments);\n          }\n        };\n\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait || 0);\n\n        if (callNow) {\n          func.appy(_this2, _arguments);\n        }\n      };\n    }\n  }, {\n    key: '__handleDropRowBtnClick__REACT_HOT_LOADER__',\n    value: function __handleDropRowBtnClick__REACT_HOT_LOADER__() {\n      return this.__handleDropRowBtnClick__REACT_HOT_LOADER__.apply(this, arguments);\n    }\n  }, {\n    key: '__handleShowOnlyToggle__REACT_HOT_LOADER__',\n    value: function __handleShowOnlyToggle__REACT_HOT_LOADER__() {\n      return this.__handleShowOnlyToggle__REACT_HOT_LOADER__.apply(this, arguments);\n    }\n  }, {\n    key: '__handleModalOpen__REACT_HOT_LOADER__',\n    value: function __handleModalOpen__REACT_HOT_LOADER__() {\n      return this.__handleModalOpen__REACT_HOT_LOADER__.apply(this, arguments);\n    }\n  }, {\n    key: '__handleModalClose__REACT_HOT_LOADER__',\n    value: function __handleModalClose__REACT_HOT_LOADER__() {\n      return this.__handleModalClose__REACT_HOT_LOADER__.apply(this, arguments);\n    }\n  }, {\n    key: '__afterHandleSaveBtnClick__REACT_HOT_LOADER__',\n    value: function __afterHandleSaveBtnClick__REACT_HOT_LOADER__() {\n      return this.__afterHandleSaveBtnClick__REACT_HOT_LOADER__.apply(this, arguments);\n    }\n  }, {\n    key: '__handleSaveBtnClick__REACT_HOT_LOADER__',\n    value: function __handleSaveBtnClick__REACT_HOT_LOADER__() {\n      return this.__handleSaveBtnClick__REACT_HOT_LOADER__.apply(this, arguments);\n    }\n  }, {\n    key: '__displayCommonMessage__REACT_HOT_LOADER__',\n    value: function __displayCommonMessage__REACT_HOT_LOADER__() {\n      return this.__displayCommonMessage__REACT_HOT_LOADER__.apply(this, arguments);\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var _this3 = this;\n\n      var delay = this.props.searchDelayTime ? this.props.searchDelayTime : 0;\n      this.debounceCallback = this.handleDebounce(function () {\n        _this3.seachInput && _this3.props.onSearch(_this3.seachInput.getValue());\n      }, delay);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.reset) {\n        this.setSearchInput('');\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.clearTimeout();\n    }\n  }, {\n    key: 'setSearchInput',\n    value: function setSearchInput(text) {\n      if (this.seachInput && this.seachInput.value !== text) {\n        this.seachInput.value = text;\n      }\n    }\n  }, {\n    key: 'clearTimeout',\n    value: function (_clearTimeout) {\n      function clearTimeout() {\n        return _clearTimeout.apply(this, arguments);\n      }\n\n      clearTimeout.toString = function () {\n        return _clearTimeout.toString();\n      };\n\n      return clearTimeout;\n    }(function () {\n      if (this.timeouteClear) {\n        clearTimeout(this.timeouteClear);\n        this.timeouteClear = 0;\n      }\n    })\n  }, {\n    key: '__displayCommonMessage__REACT_HOT_LOADER__',\n    value: function __displayCommonMessage__REACT_HOT_LOADER__() {\n      (0, _Notification.notice)('error', this.props.insertFailIndicator, '');\n    }\n  }, {\n    key: 'validateNewRow',\n    value: function validateNewRow(newRow) {\n      var _this4 = this;\n\n      var validateState = {};\n      var isValid = true;\n      var tempMsg = void 0;\n      var responseType = void 0;\n      this.props.columns.forEach(function (column) {\n        if (column.isKey && column.keyValidator) {\n          // key validator for checking exist key\n          tempMsg = _this4.props.isValidKey(newRow[column.field]);\n\n          if (tempMsg) {\n            _this4.displayCommonMessage();\n\n            isValid = false;\n            validateState[column.field] = tempMsg;\n          }\n        } else if (column.editable && column.editable.validator) {\n          // process validate\n          tempMsg = column.editable.validator(newRow[column.field], newRow);\n          responseType = typeof tempMsg === 'undefined' ? 'undefined' : _typeof(tempMsg);\n\n          if (responseType !== 'object' && tempMsg !== true) {\n            _this4.displayCommonMessage();\n\n            isValid = false;\n            validateState[column.field] = tempMsg;\n          } else if (responseType === 'object' && tempMsg.isValid !== true) {\n            (0, _Notification.notice)(tempMsg.notification.type, tempMsg.notification.msg, tempMsg.notification.title);\n            isValid = false;\n            validateState[column.field] = tempMsg.notification.msg;\n          }\n        }\n      });\n\n      if (isValid) {\n        return true;\n      } else {\n        this.clearTimeout(); // show error in form and shake it\n\n        this.setState(function () {\n          return {\n            validateState: validateState,\n            shakeEditor: true\n          };\n        });\n        this.timeouteClear = setTimeout(function () {\n          _this4.setState(function () {\n            return {\n              shakeEditor: false\n            };\n          });\n        }, 300);\n        return null;\n      }\n    }\n  }, {\n    key: '__handleSaveBtnClick__REACT_HOT_LOADER__',\n    value: function __handleSaveBtnClick__REACT_HOT_LOADER__(newRow) {\n      if (!this.validateNewRow(newRow)) {\n        // validation fail\n        return;\n      }\n\n      var msg = this.props.onAddRow(newRow);\n\n      if (msg !== false) {\n        this.afterHandleSaveBtnClick(msg);\n      }\n    }\n  }, {\n    key: '__afterHandleSaveBtnClick__REACT_HOT_LOADER__',\n    value: function __afterHandleSaveBtnClick__REACT_HOT_LOADER__(msg) {\n      var _this5 = this;\n\n      if (msg) {\n        (0, _Notification.notice)('error', msg, '');\n        this.clearTimeout(); // shake form and hack prevent modal hide\n\n        this.setState(function () {\n          return {\n            shakeEditor: true,\n            validateState: 'this is hack for prevent bootstrap modal hide'\n          };\n        }); // clear animate class\n\n        this.timeouteClear = setTimeout(function () {\n          _this5.setState(function () {\n            return {\n              shakeEditor: false\n            };\n          });\n        }, 300);\n      } else {\n        // reset state and hide modal hide\n        this.setState(function () {\n          return {\n            validateState: null,\n            shakeEditor: false,\n            isInsertModalOpen: false\n          };\n        });\n      }\n    }\n  }, {\n    key: '__handleModalClose__REACT_HOT_LOADER__',\n    value: function __handleModalClose__REACT_HOT_LOADER__() {\n      this.setState(function () {\n        return {\n          isInsertModalOpen: false\n        };\n      });\n    }\n  }, {\n    key: '__handleModalOpen__REACT_HOT_LOADER__',\n    value: function __handleModalOpen__REACT_HOT_LOADER__() {\n      this.setState(function () {\n        return {\n          isInsertModalOpen: true\n        };\n      });\n    }\n  }, {\n    key: '__handleShowOnlyToggle__REACT_HOT_LOADER__',\n    value: function __handleShowOnlyToggle__REACT_HOT_LOADER__() {\n      var _this6 = this;\n\n      this.setState(function () {\n        return {\n          showSelected: !_this6.state.showSelected\n        };\n      });\n      this.props.onShowOnlySelected();\n    }\n  }, {\n    key: '__handleDropRowBtnClick__REACT_HOT_LOADER__',\n    value: function __handleDropRowBtnClick__REACT_HOT_LOADER__() {\n      this.props.onDropRow();\n    }\n  }, {\n    key: '__handleKeyUp__REACT_HOT_LOADER__',\n    value: function __handleKeyUp__REACT_HOT_LOADER__(event) {\n      event.persist();\n      this.debounceCallback(event);\n    }\n  }, {\n    key: '__handleExportCSV__REACT_HOT_LOADER__',\n    value: function __handleExportCSV__REACT_HOT_LOADER__() {\n      this.props.onExportCSV();\n    }\n  }, {\n    key: '__handleClearBtnClick__REACT_HOT_LOADER__',\n    value: function __handleClearBtnClick__REACT_HOT_LOADER__() {\n      this.seachInput && this.seachInput.setValue('');\n      this.props.onSearch('');\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      this.modalClassName = 'bs-table-modal-sm' + ToolBar.modalSeq++;\n      var toolbar = null;\n      var btnGroup = null;\n      var insertBtn = null;\n      var deleteBtn = null;\n      var exportCSVBtn = null;\n      var showSelectedOnlyBtn = null;\n\n      if (this.props.enableInsert) {\n        if (this.props.insertBtn) {\n          insertBtn = this.renderCustomBtn(this.props.insertBtn, [this.handleModalOpen], _InsertButton2.default.name, 'onClick', this.handleModalOpen);\n        } else {\n          insertBtn = _react2.default.createElement(_InsertButton2.default, {\n            btnText: this.props.insertText,\n            onClick: this.handleModalOpen\n          });\n        }\n      }\n\n      if (this.props.enableDelete) {\n        if (this.props.deleteBtn) {\n          deleteBtn = this.renderCustomBtn(this.props.deleteBtn, [this.handleDropRowBtnClick], _DeleteButton2.default.name, 'onClick', this.handleDropRowBtnClick);\n        } else {\n          deleteBtn = _react2.default.createElement(_DeleteButton2.default, {\n            btnText: this.props.deleteText,\n            onClick: this.handleDropRowBtnClick\n          });\n        }\n      }\n\n      if (this.props.enableShowOnlySelected) {\n        if (this.props.showSelectedOnlyBtn) {\n          showSelectedOnlyBtn = this.renderCustomBtn(this.props.showSelectedOnlyBtn, [this.handleShowOnlyToggle, this.state.showSelected], _ShowSelectedOnlyButton2.default.name, 'onClick', this.handleShowOnlyToggle);\n        } else {\n          showSelectedOnlyBtn = _react2.default.createElement(_ShowSelectedOnlyButton2.default, {\n            toggle: this.state.showSelected,\n            onClick: this.handleShowOnlyToggle\n          });\n        }\n      }\n\n      if (this.props.enableExportCSV) {\n        if (this.props.exportCSVBtn) {\n          exportCSVBtn = this.renderCustomBtn(this.props.exportCSVBtn, [this.handleExportCSV], _ExportCSVButton2.default.name, 'onClick', this.handleExportCSV);\n        } else {\n          exportCSVBtn = _react2.default.createElement(_ExportCSVButton2.default, {\n            btnText: this.props.exportCSVText,\n            onClick: this.handleExportCSV\n          });\n        }\n      }\n\n      if (this.props.btnGroup) {\n        btnGroup = this.props.btnGroup({\n          exportCSVBtn: exportCSVBtn,\n          insertBtn: insertBtn,\n          deleteBtn: deleteBtn,\n          showSelectedOnlyBtn: showSelectedOnlyBtn\n        });\n      } else {\n        btnGroup = _react2.default.createElement('div', {\n          className: 'btn-group btn-group-sm',\n          role: 'group'\n        }, exportCSVBtn, insertBtn, deleteBtn, showSelectedOnlyBtn);\n      }\n\n      var _renderSearchPanel = this.renderSearchPanel(),\n          _renderSearchPanel2 = _slicedToArray(_renderSearchPanel, 3),\n          searchPanel = _renderSearchPanel2[0],\n          searchField = _renderSearchPanel2[1],\n          clearBtn = _renderSearchPanel2[2];\n\n      var modal = this.props.enableInsert ? this.renderInsertRowModal() : null;\n\n      if (this.props.toolBar) {\n        toolbar = this.props.toolBar({\n          components: {\n            exportCSVBtn: exportCSVBtn,\n            insertBtn: insertBtn,\n            deleteBtn: deleteBtn,\n            showSelectedOnlyBtn: showSelectedOnlyBtn,\n            searchPanel: searchPanel,\n            btnGroup: btnGroup,\n            searchField: searchField,\n            clearBtn: clearBtn\n          },\n          event: {\n            openInsertModal: this.handleModalOpen,\n            closeInsertModal: this.handleModalClose,\n            dropRow: this.handleDropRowBtnClick,\n            showOnlyToogle: this.handleShowOnlyToggle,\n            exportCSV: this.handleExportCSV,\n            search: this.props.onSearch\n          }\n        });\n      } else {\n        toolbar = [_react2.default.createElement('div', {\n          key: 'toolbar-left',\n          className: 'col-xs-6 col-sm-6 col-md-6 col-lg-8'\n        }, this.props.searchPosition === 'left' ? searchPanel : btnGroup), _react2.default.createElement('div', {\n          key: 'toolbar-right',\n          className: 'col-xs-6 col-sm-6 col-md-6 col-lg-4'\n        }, this.props.searchPosition === 'left' ? btnGroup : searchPanel)];\n      }\n\n      return _react2.default.createElement('div', {\n        className: 'row'\n      }, toolbar, modal);\n    }\n  }, {\n    key: 'renderSearchPanel',\n    value: function renderSearchPanel() {\n      var _this7 = this;\n\n      if (this.props.enableSearch) {\n        var classNames = 'form-group form-group-sm react-bs-table-search-form';\n        var clearBtn = null;\n        var searchField = null;\n        var searchPanel = null;\n\n        if (this.props.clearSearch) {\n          if (this.props.clearSearchBtn) {\n            clearBtn = this.renderCustomBtn(this.props.clearSearchBtn, [this.handleClearBtnClick], _ClearSearchButton2.default.name, 'onClick', this.handleClearBtnClick);\n            /* eslint max-len: 0*/\n          } else {\n            clearBtn = _react2.default.createElement(_ClearSearchButton2.default, {\n              onClick: this.handleClearBtnClick\n            });\n          }\n\n          classNames += ' input-group input-group-sm';\n        }\n\n        if (this.props.searchField) {\n          searchField = this.props.searchField({\n            search: this.handleKeyUp,\n            defaultValue: this.props.defaultSearch,\n            placeholder: this.props.searchPlaceholder\n          });\n\n          if (searchField.type.name === _SearchField2.default.name) {\n            searchField = _react2.default.cloneElement(searchField, {\n              ref: function ref(node) {\n                return _this7.seachInput = node;\n              },\n              onKeyUp: this.handleKeyUp\n            });\n          } else {\n            searchField = _react2.default.cloneElement(searchField, {\n              ref: function ref(node) {\n                return _this7.seachInput = node;\n              }\n            });\n          }\n        } else {\n          searchField = _react2.default.createElement(_SearchField2.default, {\n            ref: function ref(node) {\n              return _this7.seachInput = node;\n            },\n            defaultValue: this.props.defaultSearch,\n            placeholder: this.props.searchPlaceholder,\n            onKeyUp: this.handleKeyUp\n          });\n        }\n\n        if (this.props.searchPanel) {\n          searchPanel = this.props.searchPanel({\n            searchField: searchField,\n            clearBtn: clearBtn,\n            search: this.props.onSearch,\n            defaultValue: this.props.defaultSearch,\n            placeholder: this.props.searchPlaceholder,\n            clearBtnClick: this.handleClearBtnClick\n          });\n        } else {\n          searchPanel = _react2.default.createElement('div', {\n            className: classNames\n          }, searchField, _react2.default.createElement('span', {\n            className: 'input-group-btn'\n          }, clearBtn));\n        }\n\n        return [searchPanel, searchField, clearBtn];\n      } else {\n        return [];\n      }\n    }\n  }, {\n    key: 'renderInsertRowModal',\n    value: function renderInsertRowModal() {\n      var validateState = this.state.validateState || {};\n      var _props = this.props,\n          version = _props.version,\n          columns = _props.columns,\n          ignoreEditable = _props.ignoreEditable,\n          insertModalHeader = _props.insertModalHeader,\n          insertModalBody = _props.insertModalBody,\n          insertModalFooter = _props.insertModalFooter,\n          insertModal = _props.insertModal;\n      var modal = void 0;\n      modal = insertModal && insertModal(this.handleModalClose, this.handleSaveBtnClick, columns, validateState, ignoreEditable);\n\n      if (!modal) {\n        modal = _react2.default.createElement(_InsertModal2.default, {\n          version: version,\n          columns: columns,\n          validateState: validateState,\n          ignoreEditable: ignoreEditable,\n          onModalClose: this.handleModalClose,\n          onSave: this.handleSaveBtnClick,\n          headerComponent: insertModalHeader,\n          bodyComponent: insertModalBody,\n          footerComponent: insertModalFooter\n        });\n      }\n\n      return _react2.default.createElement(_reactModal2.default, {\n        className: 'react-bs-insert-modal modal-dialog',\n        isOpen: this.state.isInsertModalOpen,\n        ariaHideApp: false,\n        onRequestClose: this.handleModalClose,\n        contentLabel: 'Modal'\n      }, modal);\n    }\n  }, {\n    key: 'renderCustomBtn',\n    value: function renderCustomBtn(cb, params, componentName, eventName, event) {\n      var element = cb.apply(null, params);\n\n      if (element.type.name === componentName && !element.props[eventName]) {\n        var props = {};\n        props[eventName] = event;\n        element = _react2.default.cloneElement(element, props);\n      }\n\n      return element;\n    }\n  }]);\n\n  return ToolBar;\n}(_react.Component);\n\nToolBar.modalSeq = 0;\nToolBar.propTypes = {\n  version: _propTypes2.default.string,\n  onAddRow: _propTypes2.default.func,\n  onDropRow: _propTypes2.default.func,\n  onShowOnlySelected: _propTypes2.default.func,\n  enableInsert: _propTypes2.default.bool,\n  enableDelete: _propTypes2.default.bool,\n  enableSearch: _propTypes2.default.bool,\n  enableShowOnlySelected: _propTypes2.default.bool,\n  columns: _propTypes2.default.array,\n  searchPlaceholder: _propTypes2.default.string,\n  exportCSVText: _propTypes2.default.string,\n  insertText: _propTypes2.default.string,\n  deleteText: _propTypes2.default.string,\n  saveText: _propTypes2.default.string,\n  closeText: _propTypes2.default.string,\n  clearSearch: _propTypes2.default.bool,\n  ignoreEditable: _propTypes2.default.bool,\n  defaultSearch: _propTypes2.default.string,\n  insertModalHeader: _propTypes2.default.func,\n  insertModalBody: _propTypes2.default.func,\n  insertModalFooter: _propTypes2.default.func,\n  insertModal: _propTypes2.default.func,\n  insertBtn: _propTypes2.default.func,\n  deleteBtn: _propTypes2.default.func,\n  showSelectedOnlyBtn: _propTypes2.default.func,\n  exportCSVBtn: _propTypes2.default.func,\n  clearSearchBtn: _propTypes2.default.func,\n  searchField: _propTypes2.default.func,\n  searchPanel: _propTypes2.default.func,\n  btnGroup: _propTypes2.default.func,\n  toolBar: _propTypes2.default.func,\n  searchPosition: _propTypes2.default.string,\n  reset: _propTypes2.default.bool,\n  isValidKey: _propTypes2.default.func,\n  insertFailIndicator: _propTypes2.default.string\n};\nToolBar.defaultProps = {\n  reset: false,\n  enableInsert: false,\n  enableDelete: false,\n  enableSearch: false,\n  enableShowOnlySelected: false,\n  clearSearch: false,\n  ignoreEditable: false,\n  exportCSVText: _Const2.default.EXPORT_CSV_TEXT,\n  insertText: _Const2.default.INSERT_BTN_TEXT,\n  deleteText: _Const2.default.DELETE_BTN_TEXT,\n  saveText: _Const2.default.SAVE_BTN_TEXT,\n  closeText: _Const2.default.CLOSE_BTN_TEXT\n};\nvar _default = ToolBar;\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(ToolBar, 'ToolBar', '/Users/allen/Node/react-bootstrap-table-new/react-bootstrap-table/src/toolbar/ToolBar.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/allen/Node/react-bootstrap-table-new/react-bootstrap-table/src/toolbar/ToolBar.js');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}