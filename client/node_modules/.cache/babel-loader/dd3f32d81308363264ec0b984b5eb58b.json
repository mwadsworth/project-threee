{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', 'react', 'react-dom', 'prop-types', './s-alert-parts/s-alert-tools', './s-alert-parts/s-alert-store', './SAlertContentTmpl'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('react'), require('react-dom'), require('prop-types'), require('./s-alert-parts/s-alert-tools'), require('./s-alert-parts/s-alert-store'), require('./SAlertContentTmpl'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.react, global.reactDom, global.propTypes, global.sAlertTools, global.sAlertStore, global.SAlertContentTmpl);\n    global.SAlertContent = mod.exports;\n  }\n})(this, function (exports, _react, _reactDom, _propTypes, _sAlertTools, _sAlertStore, _SAlertContentTmpl) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _reactDom2 = _interopRequireDefault(_reactDom);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  var _sAlertTools2 = _interopRequireDefault(_sAlertTools);\n\n  var _sAlertStore2 = _interopRequireDefault(_sAlertStore);\n\n  var _SAlertContentTmpl2 = _interopRequireDefault(_SAlertContentTmpl);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var SAlertContent = function (_React$Component) {\n    _inherits(SAlertContent, _React$Component);\n\n    function SAlertContent(props) {\n      _classCallCheck(this, SAlertContent);\n\n      return _possibleConstructorReturn(this, (SAlertContent.__proto__ || Object.getPrototypeOf(SAlertContent)).call(this, props));\n    }\n\n    _createClass(SAlertContent, [{\n      key: 'handleCloseAlert',\n      value: function handleCloseAlert() {\n        var closingTimeout = void 0;\n        var alertId = this.props.id;\n\n        var currentAlertElem = _reactDom2.default.findDOMNode(this);\n\n        var animationClose = function animationClose() {\n          currentAlertElem.style.display = 'none';\n\n          _sAlertStore2.default.dispatch({\n            type: 'REMOVE',\n            data: {\n              id: alertId\n            }\n          });\n\n          clearTimeout(closingTimeout);\n        };\n\n        if (document.hidden || document.webkitHidden || !currentAlertElem.classList.contains('s-alert-is-effect')) {\n          _sAlertStore2.default.dispatch({\n            type: 'REMOVE',\n            data: {\n              id: alertId\n            }\n          });\n        } else {\n          currentAlertElem.classList.remove('s-alert-show');\n          closingTimeout = setTimeout(function () {\n            currentAlertElem.classList.add('s-alert-hide');\n          }, 100);\n          currentAlertElem.removeEventListener('webkitAnimationEnd', animationClose, false);\n          currentAlertElem.removeEventListener('animationend', animationClose, false);\n          currentAlertElem.addEventListener('webkitAnimationEnd', animationClose, false);\n          currentAlertElem.addEventListener('animationend', animationClose, false);\n        } // stop audio when closing\n\n\n        this.alertAudio && this.alertAudio.load();\n      }\n    }, {\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        var beep = this.props.beep;\n        var condition = this.props.condition;\n\n        if (beep && typeof beep === 'string') {\n          this.alertAudio = new Audio(beep);\n          this.alertAudio.load();\n          this.alertAudio.play();\n        }\n\n        if (beep && (typeof beep === 'undefined' ? 'undefined' : _typeof(beep)) === 'object' && condition === 'info') {\n          this.alertAudio = new Audio(beep.info);\n          this.alertAudio.load();\n          this.alertAudio.play();\n        }\n\n        if (beep && (typeof beep === 'undefined' ? 'undefined' : _typeof(beep)) === 'object' && condition === 'error') {\n          this.alertAudio = new Audio(beep.error);\n          this.alertAudio.load();\n          this.alertAudio.play();\n        }\n\n        if (beep && (typeof beep === 'undefined' ? 'undefined' : _typeof(beep)) === 'object' && condition === 'success') {\n          this.alertAudio = new Audio(beep.success);\n          this.alertAudio.load();\n          this.alertAudio.play();\n        }\n\n        if (beep && (typeof beep === 'undefined' ? 'undefined' : _typeof(beep)) === 'object' && condition === 'warning') {\n          this.alertAudio = new Audio(beep.warning);\n          this.alertAudio.load();\n          this.alertAudio.play();\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        if (typeof this.props.timeout === 'number') {\n          this.closeTimer = setTimeout(function () {\n            _this2.handleCloseAlert();\n          }, this.props.timeout);\n        }\n\n        if (this.props.onShow) {\n          this.props.onShow();\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        if (this.closeTimer) {\n          clearTimeout(this.closeTimer);\n        }\n\n        if (this.props.onClose) {\n          this.props.onClose();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var classNames = 's-alert-box s-alert-' + this.props.condition + ' s-alert-' + this.props.position + ' ' + (this.props.effect ? 's-alert-is-effect s-alert-effect-' + this.props.effect : '') + ' s-alert-show';\n        var message = this.props.html ? _react2.default.createElement('span', {\n          dangerouslySetInnerHTML: {\n            __html: this.props.message\n          }\n        }) : this.props.message;\n        var styles = this.props.boxPosition ? _sAlertTools2.default.styleToObj(this.props.boxPosition) : {};\n        var id = this.props.id;\n        var handleClose = this.handleCloseAlert.bind(this);\n        var contentTemplate = this.props.contentTemplate || _SAlertContentTmpl2.default;\n        var customFields = this.props.customFields || {};\n        var condition = this.props.condition;\n        return _react2.default.createElement(contentTemplate, {\n          classNames: classNames,\n          id: id,\n          styles: styles,\n          message: message,\n          handleClose: handleClose,\n          customFields: customFields,\n          condition: condition\n        });\n      }\n    }]);\n\n    return SAlertContent;\n  }(_react2.default.Component);\n\n  SAlertContent.propTypes = {\n    condition: _propTypes2.default.string.isRequired,\n    message: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),\n    position: _propTypes2.default.string.isRequired,\n    boxPosition: _propTypes2.default.string,\n    id: _propTypes2.default.string.isRequired,\n    effect: _propTypes2.default.string,\n    beep: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object, _propTypes2.default.bool]),\n    timeout: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['none']), _propTypes2.default.number]),\n    html: _propTypes2.default.bool,\n    onClose: _propTypes2.default.func,\n    onShow: _propTypes2.default.func,\n    customFields: _propTypes2.default.object,\n    contentTemplate: _propTypes2.default.func\n  };\n  exports.default = SAlertContent;\n});","map":null,"metadata":{},"sourceType":"script"}