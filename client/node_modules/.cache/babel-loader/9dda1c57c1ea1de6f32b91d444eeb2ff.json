{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Const = require('../Const');\n\nvar _Const2 = _interopRequireDefault(_Const);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint quotes: 0 */\n\n/* eslint max-len: 0 */\n\n\nvar legalComparators = ['=', '>', '>=', '<', '<=', '!='];\n\nfunction dateParser(d) {\n  return d.getFullYear() + '-' + (\"0\" + (d.getMonth() + 1)).slice(-2) + '-' + (\"0\" + d.getDate()).slice(-2);\n}\n\nvar DateFilter = function (_Component) {\n  _inherits(DateFilter, _Component);\n\n  function DateFilter(props) {\n    _classCallCheck(this, DateFilter);\n\n    var _this = _possibleConstructorReturn(this, (DateFilter.__proto__ || Object.getPrototypeOf(DateFilter)).call(this, props));\n\n    _this.dateComparators = _this.props.dateComparators || legalComparators;\n    _this.filter = _this.filter.bind(_this);\n    _this.onChangeComparator = _this.onChangeComparator.bind(_this);\n    return _this;\n  }\n\n  _createClass(DateFilter, [{\n    key: 'setDefaultDate',\n    value: function setDefaultDate() {\n      var defaultDate = '';\n      var defaultValue = this.props.defaultValue;\n\n      if (defaultValue && defaultValue.date) {\n        // Set the appropriate format for the input type=date, i.e. \"YYYY-MM-DD\"\n        defaultDate = dateParser(new Date(defaultValue.date));\n      }\n\n      return defaultDate;\n    }\n  }, {\n    key: 'onChangeComparator',\n    value: function onChangeComparator(event) {\n      var date = this.inputDate.value;\n      var comparator = event.target.value;\n\n      if (date === '') {\n        return;\n      }\n\n      date = new Date(date);\n      this.props.filterHandler({\n        date: date,\n        comparator: comparator\n      }, _Const2.default.FILTER_TYPE.DATE);\n    }\n  }, {\n    key: 'getComparatorOptions',\n    value: function getComparatorOptions() {\n      var optionTags = [];\n      optionTags.push(_react2.default.createElement('option', {\n        key: '-1'\n      }));\n\n      for (var i = 0; i < this.dateComparators.length; i++) {\n        optionTags.push(_react2.default.createElement('option', {\n          key: i,\n          value: this.dateComparators[i]\n        }, this.dateComparators[i]));\n      }\n\n      return optionTags;\n    }\n  }, {\n    key: 'filter',\n    value: function filter(event) {\n      var comparator = this.dateFilterComparator.value;\n      var dateValue = event.target.value;\n\n      if (dateValue) {\n        this.props.filterHandler({\n          date: new Date(dateValue),\n          comparator: comparator\n        }, _Const2.default.FILTER_TYPE.DATE);\n      } else {\n        this.props.filterHandler(null, _Const2.default.FILTER_TYPE.DATE);\n      }\n    }\n  }, {\n    key: 'cleanFiltered',\n    value: function cleanFiltered() {\n      var value = this.setDefaultDate();\n      var comparator = this.props.defaultValue ? this.props.defaultValue.comparator : '';\n      this.setState(function () {\n        return {\n          isPlaceholderSelected: value === ''\n        };\n      });\n      this.dateFilterComparator.value = comparator;\n      this.inputDate.value = value;\n      this.props.filterHandler({\n        date: new Date(value),\n        comparator: comparator\n      }, _Const2.default.FILTER_TYPE.DATE);\n    }\n  }, {\n    key: 'applyFilter',\n    value: function applyFilter(filterDateObj) {\n      var date = filterDateObj.date,\n          comparator = filterDateObj.comparator;\n      this.setState(function () {\n        return {\n          isPlaceholderSelected: date === ''\n        };\n      });\n      this.dateFilterComparator.value = comparator;\n      this.inputDate.value = dateParser(date);\n      this.props.filterHandler({\n        date: date,\n        comparator: comparator\n      }, _Const2.default.FILTER_TYPE.DATE);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var comparator = this.dateFilterComparator.value;\n      var dateValue = this.inputDate.value;\n\n      if (comparator && dateValue) {\n        this.props.filterHandler({\n          date: new Date(dateValue),\n          comparator: comparator\n        }, _Const2.default.FILTER_TYPE.DATE);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          defaultValue = _props.defaultValue,\n          _props$style = _props.style,\n          date = _props$style.date,\n          comparator = _props$style.comparator;\n      return _react2.default.createElement('div', {\n        className: 'filter date-filter'\n      }, _react2.default.createElement('select', {\n        ref: function ref(n) {\n          return _this2.dateFilterComparator = n;\n        },\n        style: comparator,\n        className: 'date-filter-comparator form-control',\n        onChange: this.onChangeComparator,\n        defaultValue: defaultValue ? defaultValue.comparator : ''\n      }, this.getComparatorOptions()), _react2.default.createElement('input', {\n        ref: function ref(n) {\n          return _this2.inputDate = n;\n        },\n        className: 'filter date-filter-input form-control',\n        style: date,\n        type: 'date',\n        onChange: this.filter,\n        defaultValue: this.setDefaultDate()\n      }));\n    }\n  }]);\n\n  return DateFilter;\n}(_react.Component);\n\nDateFilter.propTypes = {\n  filterHandler: _propTypes2.default.func.isRequired,\n  defaultValue: _propTypes2.default.shape({\n    date: _propTypes2.default.object,\n    comparator: _propTypes2.default.oneOf(legalComparators)\n  }),\n  style: _propTypes2.default.shape({\n    date: _propTypes2.default.oneOfType([_propTypes2.default.object]),\n    comparator: _propTypes2.default.oneOfType([_propTypes2.default.object])\n  }),\n\n  /* eslint consistent-return: 0 */\n  dateComparators: function dateComparators(props, propName) {\n    if (!props[propName]) {\n      return;\n    }\n\n    for (var i = 0; i < props[propName].length; i++) {\n      var comparatorIsValid = false;\n\n      for (var j = 0; j < legalComparators.length; j++) {\n        if (legalComparators[j] === props[propName][i]) {\n          comparatorIsValid = true;\n          break;\n        }\n      }\n\n      if (!comparatorIsValid) {\n        return new Error('Date comparator provided is not supported.\\n          Use only ' + legalComparators);\n      }\n    }\n  },\n  columnName: _propTypes2.default.any\n};\nDateFilter.defaultProps = {\n  style: {\n    date: null,\n    comparator: null\n  }\n};\nvar _default = DateFilter;\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(legalComparators, 'legalComparators', '/Users/allen/Node/react-bootstrap-table-new/react-bootstrap-table/src/filters/Date.js');\n\n  __REACT_HOT_LOADER__.register(dateParser, 'dateParser', '/Users/allen/Node/react-bootstrap-table-new/react-bootstrap-table/src/filters/Date.js');\n\n  __REACT_HOT_LOADER__.register(DateFilter, 'DateFilter', '/Users/allen/Node/react-bootstrap-table-new/react-bootstrap-table/src/filters/Date.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/allen/Node/react-bootstrap-table-new/react-bootstrap-table/src/filters/Date.js');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}