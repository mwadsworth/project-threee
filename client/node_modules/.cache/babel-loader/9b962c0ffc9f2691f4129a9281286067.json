{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _Const = require('../Const');\n\nvar _Const2 = _interopRequireDefault(_Const);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar legalComparators = ['=', '>', '>=', '<', '<=', '!='];\n\nvar NumberFilter = function (_Component) {\n  _inherits(NumberFilter, _Component);\n\n  function NumberFilter(props) {\n    _classCallCheck(this, NumberFilter);\n\n    var _this = _possibleConstructorReturn(this, (NumberFilter.__proto__ || Object.getPrototypeOf(NumberFilter)).call(this, props));\n\n    _this.numberComparators = _this.props.numberComparators || legalComparators;\n    _this.timeout = null;\n    _this.state = {\n      isPlaceholderSelected: _this.props.defaultValue === undefined || _this.props.defaultValue.number === undefined || _this.props.options && _this.props.options.indexOf(_this.props.defaultValue.number) === -1\n    };\n    _this.onChangeNumber = _this.onChangeNumber.bind(_this);\n    _this.onChangeNumberSet = _this.onChangeNumberSet.bind(_this);\n    _this.onChangeComparator = _this.onChangeComparator.bind(_this);\n    return _this;\n  }\n\n  _createClass(NumberFilter, [{\n    key: 'onChangeNumber',\n    value: function onChangeNumber(event) {\n      var _this2 = this;\n\n      var comparator = this.numberFilterComparator.value;\n\n      if (comparator === '') {\n        return;\n      }\n\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n\n      var filterValue = event.target.value;\n      this.timeout = setTimeout(function () {\n        _this2.props.filterHandler({\n          number: filterValue,\n          comparator: comparator\n        }, _Const2.default.FILTER_TYPE.NUMBER);\n      }, this.props.delay);\n    }\n  }, {\n    key: 'onChangeNumberSet',\n    value: function onChangeNumberSet(event) {\n      var comparator = this.numberFilterComparator.value;\n      var value = event.target.value;\n      this.setState(function () {\n        return {\n          isPlaceholderSelected: value === ''\n        };\n      });\n\n      if (comparator === '') {\n        return;\n      }\n\n      this.props.filterHandler({\n        number: value,\n        comparator: comparator\n      }, _Const2.default.FILTER_TYPE.NUMBER);\n    }\n  }, {\n    key: 'onChangeComparator',\n    value: function onChangeComparator(event) {\n      var value = this.numberFilter.value;\n      var comparator = event.target.value;\n\n      if (value === '') {\n        return;\n      }\n\n      this.props.filterHandler({\n        number: value,\n        comparator: comparator\n      }, _Const2.default.FILTER_TYPE.NUMBER);\n    }\n  }, {\n    key: 'cleanFiltered',\n    value: function cleanFiltered() {\n      var value = this.props.defaultValue ? this.props.defaultValue.number : '';\n      var comparator = this.props.defaultValue ? this.props.defaultValue.comparator : '';\n      this.setState(function () {\n        return {\n          isPlaceholderSelected: value === ''\n        };\n      });\n      this.numberFilterComparator.value = comparator;\n      this.numberFilter.value = value;\n      this.props.filterHandler({\n        number: value,\n        comparator: comparator\n      }, _Const2.default.FILTER_TYPE.NUMBER);\n    }\n  }, {\n    key: 'applyFilter',\n    value: function applyFilter(filterObj) {\n      var number = filterObj.number,\n          comparator = filterObj.comparator;\n      this.setState(function () {\n        return {\n          isPlaceholderSelected: number === ''\n        };\n      });\n      this.numberFilterComparator.value = comparator;\n      this.numberFilter.value = number;\n      this.props.filterHandler({\n        number: number,\n        comparator: comparator\n      }, _Const2.default.FILTER_TYPE.NUMBER);\n    }\n  }, {\n    key: 'getComparatorOptions',\n    value: function getComparatorOptions() {\n      var optionTags = [];\n      var withoutEmptyComparatorOption = this.props.withoutEmptyComparatorOption;\n\n      if (!withoutEmptyComparatorOption) {\n        optionTags.push(_react2.default.createElement('option', {\n          key: '-1'\n        }));\n      }\n\n      for (var i = 0; i < this.numberComparators.length; i++) {\n        optionTags.push(_react2.default.createElement('option', {\n          key: i,\n          value: this.numberComparators[i]\n        }, this.numberComparators[i]));\n      }\n\n      return optionTags;\n    }\n  }, {\n    key: 'getNumberOptions',\n    value: function getNumberOptions() {\n      var optionTags = [];\n      var _props = this.props,\n          options = _props.options,\n          withoutEmptyNumberOption = _props.withoutEmptyNumberOption;\n\n      if (!withoutEmptyNumberOption) {\n        optionTags.push(_react2.default.createElement('option', {\n          key: '-1',\n          value: ''\n        }, this.props.placeholder || 'Select ' + this.props.columnName + '...'));\n      }\n\n      for (var i = 0; i < options.length; i++) {\n        optionTags.push(_react2.default.createElement('option', {\n          key: i,\n          value: options[i]\n        }, options[i]));\n      }\n\n      return optionTags;\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var comparator = this.numberFilterComparator.value;\n      var number = this.numberFilter.value;\n\n      if (comparator && number) {\n        this.props.filterHandler({\n          number: number,\n          comparator: comparator\n        }, _Const2.default.FILTER_TYPE.NUMBER);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      clearTimeout(this.timeout);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var selectClass = (0, _classnames2.default)('select-filter', 'number-filter-input', 'form-control', {\n        'placeholder-selected': this.state.isPlaceholderSelected\n      });\n      return _react2.default.createElement('div', {\n        className: 'filter number-filter'\n      }, _react2.default.createElement('select', {\n        ref: function ref(n) {\n          return _this3.numberFilterComparator = n;\n        },\n        style: this.props.style.comparator,\n        className: 'number-filter-comparator form-control',\n        onChange: this.onChangeComparator,\n        defaultValue: this.props.defaultValue ? this.props.defaultValue.comparator : ''\n      }, this.getComparatorOptions()), this.props.options ? _react2.default.createElement('select', {\n        ref: function ref(n) {\n          return _this3.numberFilter = n;\n        },\n        className: selectClass,\n        onChange: this.onChangeNumberSet,\n        defaultValue: this.props.defaultValue ? this.props.defaultValue.number : ''\n      }, this.getNumberOptions()) : _react2.default.createElement('input', {\n        ref: function ref(n) {\n          return _this3.numberFilter = n;\n        },\n        type: 'number',\n        style: this.props.style.number,\n        className: 'number-filter-input form-control',\n        placeholder: this.props.placeholder || 'Enter ' + this.props.columnName + '...',\n        onChange: this.onChangeNumber,\n        defaultValue: this.props.defaultValue ? this.props.defaultValue.number : ''\n      }));\n    }\n  }]);\n\n  return NumberFilter;\n}(_react.Component);\n\nNumberFilter.propTypes = {\n  filterHandler: _propTypes2.default.func.isRequired,\n  options: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  defaultValue: _propTypes2.default.shape({\n    number: _propTypes2.default.number,\n    comparator: _propTypes2.default.oneOf(legalComparators)\n  }),\n  style: _propTypes2.default.shape({\n    number: _propTypes2.default.oneOfType([_propTypes2.default.object]),\n    comparator: _propTypes2.default.oneOfType([_propTypes2.default.object])\n  }),\n  delay: _propTypes2.default.number,\n\n  /* eslint consistent-return: 0 */\n  numberComparators: function numberComparators(props, propName) {\n    if (!props[propName]) {\n      return;\n    }\n\n    for (var i = 0; i < props[propName].length; i++) {\n      var comparatorIsValid = false;\n\n      for (var j = 0; j < legalComparators.length; j++) {\n        if (legalComparators[j] === props[propName][i]) {\n          comparatorIsValid = true;\n          break;\n        }\n      }\n\n      if (!comparatorIsValid) {\n        return new Error('Number comparator provided is not supported.\\n          Use only ' + legalComparators);\n      }\n    }\n  },\n  placeholder: _propTypes2.default.string,\n  columnName: _propTypes2.default.any,\n  withoutEmptyComparatorOption: _propTypes2.default.bool,\n  withoutEmptyNumberOption: _propTypes2.default.bool\n};\nNumberFilter.defaultProps = {\n  delay: _Const2.default.FILTER_DELAY,\n  withoutEmptyComparatorOption: false,\n  withoutEmptyNumberOption: false,\n  style: {\n    number: null,\n    comparator: null\n  }\n};\nvar _default = NumberFilter;\nexports.default = _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(legalComparators, 'legalComparators', '/Users/allen/Node/react-bootstrap-table-new/react-bootstrap-table/src/filters/Number.js');\n\n  __REACT_HOT_LOADER__.register(NumberFilter, 'NumberFilter', '/Users/allen/Node/react-bootstrap-table-new/react-bootstrap-table/src/filters/Number.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/allen/Node/react-bootstrap-table-new/react-bootstrap-table/src/filters/Number.js');\n}();\n\n;","map":null,"metadata":{},"sourceType":"script"}